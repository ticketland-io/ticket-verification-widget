{
  "version": "0.1.0",
  "name": "ticket_nft",
  "instructions": [
    {
      "name": "initialize",
      "docs": [
        "Initializes the state i.e. instance of a given program",
        "",
        "# Arguments",
        "",
        "* `ctx` - The Anchor context holding the accounts",
        "* `ticket_sale_state` - The state of the ticket sale program",
        "* `ticket_sale_program` - The program id of the ticket sale program"
      ],
      "accounts": [
        {
          "name": "state",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "nftAuthority",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "deployer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "ticketSaleState",
          "type": "publicKey"
        },
        {
          "name": "ticketSaleProgram",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "setSecondaryMarket",
      "docs": [
        "Stores the secondary market state and program id",
        "",
        "# Arguments",
        "",
        "* `ctx` - The Anchor context holding the accounts",
        "* `secondary_market_state` - The state of the secondary market program",
        "* `secondary_market_program` - The program id of the secondary market program"
      ],
      "accounts": [
        {
          "name": "state",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "deployer",
          "isMut": true,
          "isSigner": true
        }
      ],
      "args": [
        {
          "name": "secondaryMarketState",
          "type": "publicKey"
        },
        {
          "name": "secondaryMarketProgram",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "createTicket",
      "docs": [
        "Creates a new Ticket NFT. Only the ticket sale contract can call this instruction",
        "",
        "# Arguments",
        "",
        "* `ctx` - The Anchor context holding the accounts",
        "* `_cpi_authority_bump` - The bump of the ticket sale cpi authority i.e. the PDA that can call this instruction",
        "* `event_id` - The event id for which this ticket is created",
        "* `seat_index` - The index of the seat",
        "* `sale` - The sale account though which this the ticket was purchased",
        "* `name` - The name that will be attached to the metaplex metadata. This will most likely be the name of the seat"
      ],
      "accounts": [
        {
          "name": "state",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "ticketMetadata",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The newly created Ticket Metadata"
          ]
        },
        {
          "name": "nftAuthority",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "nft",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The underlying Ticket NFT Mint account"
          ]
        },
        {
          "name": "eventNftMetadata",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "from the Ticket sale program which knows all the seeds to re-create the Pubkey"
          ]
        },
        {
          "name": "metadata",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "masterEdition",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "ticketNftAta",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The ATA that is a PDA controlled by the Ticket sale program and will be the owner of the Ticket NFT",
            "until the end of the event."
          ]
        },
        {
          "name": "ticketSaleCpiAuthority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "ticketBuyer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "This is the user that buys the ticket"
          ]
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "metadataProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "cpiAuthorityBump",
          "type": "u8"
        },
        {
          "name": "eventId",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "seatIndex",
          "type": "u32"
        },
        {
          "name": "sale",
          "type": "publicKey"
        },
        {
          "name": "priceSold",
          "type": "u64"
        },
        {
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "name": "transfer",
      "accounts": [
        {
          "name": "state",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "ticketMetadata",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The newly created Ticket Metadata",
            "We do not apply the seeds because this IX can only be called by the secondary_market_cpi_authority",
            "which will make sure the correct ticket_metadata is passed."
          ]
        },
        {
          "name": "secondaryMarketCpiAuthority",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "newOwner",
          "type": "publicKey"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "State",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bumps",
            "type": {
              "defined": "InitBumps"
            }
          },
          {
            "name": "ticketSaleProgram",
            "docs": [
              "The Ticket sale Program"
            ],
            "type": "publicKey"
          },
          {
            "name": "ticketSaleState",
            "docs": [
              "A State account of the Ticket sale Program"
            ],
            "type": "publicKey"
          },
          {
            "name": "secondaryMarketProgram",
            "docs": [
              "The Secondary Market Program"
            ],
            "type": "publicKey"
          },
          {
            "name": "secondaryMarketState",
            "docs": [
              "A State account of the Secondary Market Program"
            ],
            "type": "publicKey"
          },
          {
            "name": "nftAuthority",
            "docs": [
              "The authority of all NFT Mints that are created in this contract"
            ],
            "type": "publicKey"
          },
          {
            "name": "deployer",
            "docs": [
              "The deployer of this instance"
            ],
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "TicketMetadata",
      "docs": [
        "A wrapper around the Metaplex metadata that includes additional custom data related to our",
        "ticketing system."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "attended",
            "docs": [
              "Indicated if the owner of this ticket attended the event"
            ],
            "type": "bool"
          },
          {
            "name": "eventId",
            "docs": [
              "The id of the event which this ticket belongs to"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "seatIndex",
            "docs": [
              "The seat index of this ticket"
            ],
            "type": "u32"
          },
          {
            "name": "sale",
            "docs": [
              "The primary sale account containing information about how the sale of the ticket.",
              "This is useful as we can retrieve information such as ticket type etc."
            ],
            "type": "publicKey"
          },
          {
            "name": "priceSold",
            "docs": [
              "The price the ticket is sold for. The reason we need to keep this explicitly is because",
              "the sale type can an auction and thus the Sale account can't tell us what price the ticket was",
              "sold for."
            ],
            "type": "u64"
          },
          {
            "name": "owner",
            "docs": [
              "The original owner of the Ticket NFT"
            ],
            "type": "publicKey"
          },
          {
            "name": "metadata",
            "docs": [
              "The metaplex metadata associated with this NFT"
            ],
            "type": "publicKey"
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "InitBumps",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "nftAuthority",
            "type": "u8"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "OnlyDeployer",
      "msg": "Only Deployer"
    },
    {
      "code": 6001,
      "name": "WrongTicketSaleProgram",
      "msg": "Not ticket sale program"
    }
  ]
}
